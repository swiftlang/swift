//===--- DiagnosticGroups.def - Diagnostic Groups ---------------*- C++ -*-===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2024 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//
//
//  This file defines diagnostic groups and links between them.
//
//===----------------------------------------------------------------------===//

#define DEFINE_DIAGNOSTIC_GROUPS_MACROS
#include "swift/AST/DefineDiagnosticGroupsMacros.h"

// GROUP(Name, DocsFile)
// GROUP_LINK(Parent, Child)

GROUP(no_group, "")

GROUP(ActorIsolatedCall, "actor-isolated-call.md")
GROUP(AsyncCallerExecution, "async-caller-execution.md")
GROUP(ConformanceIsolation, "conformance-isolation.md")
GROUP(DeprecatedDeclaration, "deprecated-declaration.md")
GROUP(DynamicCallable, "dynamic-callable-requirements.md")
GROUP(ErrorInFutureSwiftVersion, "error-in-future-swift-version.md")
GROUP(ExistentialAny, "existential-any.md")
GROUP(ExistentialMemberAccess, "existential-member-access-limitations.md")
GROUP(IsolatedConformances, "isolated-conformances.md")
GROUP(MultipleInheritance, "multiple-inheritance.md")
GROUP(MutableGlobalVariable, "mutable-global-variable.md")
GROUP(NominalTypes, "nominal-types.md")
GROUP(OpaqueTypeInference, "opaque-type-inference.md")
GROUP(PreconcurrencyImport, "preconcurrency-import.md")
GROUP(PropertyWrappers, "property-wrapper-requirements.md")
GROUP(ProtocolTypeNonConformance, "protocol-type-non-conformance.md")
GROUP(ResultBuilderMethods, "result-builder-methods.md")
GROUP(SendableClosureCaptures, "sendable-closure-captures.md")
GROUP(SendingRisksDataRace, "sending-risks-data-race.md")
GROUP(StrictLanguageFeatures, "strict-language-features.md")
GROUP(StrictMemorySafety, "strict-memory-safety.md")
GROUP(StringInterpolationConformance, "string-interpolation-conformance.md")
GROUP(TemporaryPointers, "temporary-pointers.md")
GROUP(TrailingClosureMatching, "trailing-closure-matching.md")
GROUP(UnknownWarningGroup, "unknown-warning-group.md")

#define UNDEFINE_DIAGNOSTIC_GROUPS_MACROS
#include "swift/AST/DefineDiagnosticGroupsMacros.h"
