# -*- Python -*-

import os
import platform
import re
import subprocess
import tempfile

import lit.formats
import lit.util

# Configuration file for the 'lit' test runner.

# name: The name of this test suite.
config.name = 'swiftc'

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(True)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.swift', '.sil']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)

# test_exec_root: The root path where tests should be run.
config.test_exec_root = os.path.join(config.test_source_root, 'Output')

# Tweak the PATH to include the tools dir.
llvm_tools_dir = lit_config.params.get('llvm_tools_dir', None)
if llvm_tools_dir:
    path = os.path.pathsep.join((llvm_tools_dir, config.environment['PATH']))
    config.environment['PATH'] = path

# Add swiftc to the path
swiftc_dir = os.path.join(os.path.dirname(config.test_source_root), 'build')
if os.path.exists(swiftc_dir):
    path = os.path.pathsep.join((swiftc_dir, config.environment.get('PATH', '')))
    config.environment['PATH'] = path

# Define substitutions
config.substitutions.append(('%swiftc', 'swiftc'))
config.substitutions.append(('%target-typecheck-verify-swift', 'swiftc --dump-ast'))
config.substitutions.append(('%target-swift-frontend', 'swiftc'))
config.substitutions.append(('%target-build-swift', 'swiftc -o'))

# Disable tests that require features we don't support
config.available_features.add('no_async')
config.available_features.add('no_macros')
config.available_features.add('no_objc_interop')

# Add basic features we do support
config.available_features.add('swift_parser')
config.available_features.add('swift_ast')
config.available_features.add('swift_sil')
config.available_features.add('swift_irgen')