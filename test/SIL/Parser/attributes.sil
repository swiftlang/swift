// RUN: %target-sil-opt %s | %FileCheck %s

// CHECK-LABEL: sil [_semantics "123"] [_semantics "456"] @foo : $@convention(thin) () -> () {
sil [_semantics "123"] [_semantics "456"] @foo : $@convention(thin) () -> () {
bb0:
  return undef : $()
}

// CHECK-LABEL: sil [no_allocation] [ossa] @test_no_allocation : $@convention(thin) () -> () {
sil [no_allocation] [ossa] @test_no_allocation : $@convention(thin) () -> () {
bb0:
  %1 = tuple ()
  return %1 : $()
}

// CHECK-LABEL: sil [no_locks] [ossa] @test_no_locks : $@convention(thin) () -> () {
sil [no_locks] [ossa] @test_no_locks : $@convention(thin) () -> () {
bb0:
  %1 = tuple ()
  return %1 : $()
}

// CHECK-LABEL: sil [perf_constraint] [ossa] @test_perf_constraint : $@convention(thin) () -> () {
sil [perf_constraint] [ossa] @test_perf_constraint : $@convention(thin) () -> () {
bb0:
  %1 = tuple ()
  return %1 : $()
}

// Make sure we don't try to parse the Swift decl as '@owned() func baz()'.
sil @bar : $@convention(thin) () -> @owned ()
func baz()

sil [unsafe_nonescapable_result] [ossa] @test_unsafe_nonescapable : $@convention(thin) () -> () {
bb0:
  %1 = tuple ()
  return %1 : $()
}
