struct Box<Wrapped> {

    func boxes() -> [cake.Box<Wrapped.Element>] where Wrapped : Sequence
}

class C1 : cake.Prot {

    typealias Element = Int

    var p: Int

    func foo()

    func foo1(i0 i0: Int, i1 i1: Int)

    subscript(_ index: Int) -> Int { get }

    subscript(index i: Float) -> Int { get }

    enum C1Cases : Int {

        case case1
    }

    func extfoo()

    func foo1()

    subscript(_ index: Int) -> Int { get }
}

extension C1 {

    func addition()
}

extension C1 : cake.P4 {

    func C1foo()

    struct C1S1 {

        func C1S1foo(a a: any cake.P4)
    }
}

extension C1.C1Cases {

    @inlinable var hashValue: Int { get }

    @inlinable func hash(into hasher: inout Hasher)

    static func != (_ lhs: cake.C1.C1Cases, _ rhs: cake.C1.C1Cases) -> Bool
}

class C2 : cake.C1 {

    func C2foo()
}

enum MyEnum : Int {

    case Blah

    @inlinable var hashValue: Int { get }

    @inlinable func hash(into hasher: inout Hasher)

    static func != (_ lhs: cake.MyEnum, _ rhs: cake.MyEnum) -> Bool
}

protocol P {

    func foo()
}

extension P {

    func bar() where Self : Equatable
}

@objc protocol P2 {

    @objc optional func foo1()
}

protocol P3 {

    associatedtype T
}

protocol P4 {
}

protocol P5 {

    associatedtype Element
}

protocol P6 : cake.P5 {
}

extension P6 {

    var null: Self.Element? { get }
}

protocol Prot {

    associatedtype Element

    var p: Int { get }

    func foo()

    func foo1()
}

extension Prot {

    func foo1()

    subscript(_ index: Int) -> Int { get }
}

extension Prot where Self.Element == Int {

    func extfoo()
}

struct S1 {

    enum SE {

        case a

        case b

        case c
    }

    func foo1()

    struct S2 {

        let b: Int
    }
}

extension S1.SE {

    static func != (_ lhs: cake.S1.SE, _ rhs: cake.S1.SE) -> Bool
}

struct S2 : cake.P3 {

    typealias T = cake.S2
}

struct S3<Wrapped> : cake.P5 where Wrapped : cake.P5 {

    typealias Element = Wrapped.Element
}

extension S3 where Wrapped : cake.P6 {

    var null: Wrapped.Element? { get }
}

func genfoo<T1, T2>(x ix: T1, y iy: T2) where T1 : cake.Prot, T2 : cake.C1, T1.Element == Int

func shouldPrintAnyAsKeyword(x x: Any)


[
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 0,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 11,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 27,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 32,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 44,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Box",
    key.usr: "s:4cake3BoxV",
    key.offset: 49,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Wrapped",
    key.usr: "s:4cake3BoxV7Wrappedxmfp",
    key.offset: 53,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.associatedtype,
    key.name: "Element",
    key.usr: "s:ST7ElementQa",
    key.offset: 61,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 71,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Wrapped",
    key.usr: "s:4cake3BoxV7Wrappedxmfp",
    key.offset: 77,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Sequence",
    key.usr: "s:ST",
    key.offset: 87,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 99,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 105,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 110,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:4cake4ProtP",
    key.offset: 115,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 127,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 137,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 147,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 156,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 160,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 163,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 172,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 177,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 188,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 193,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 198,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 201,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 205,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 210,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 213,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 217,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 227,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 237,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 239,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 246,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 254,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 260,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 271,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 281,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 287,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float",
    key.usr: "s:Sf",
    key.offset: 290,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 300,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 306,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 317,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 322,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 332,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 347,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 352,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 369,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 374,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 388,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 393,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 405,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 415,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 417,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 424,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 432,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 438,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 447,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 457,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 467,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 472,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 486,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 496,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 501,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P4",
    key.usr: "s:4cake2P4P",
    key.offset: 506,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 516,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 521,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 534,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 541,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 557,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 562,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 570,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 572,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 575,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 579,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P4",
    key.usr: "s:4cake2P4P",
    key.offset: 584,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 597,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 607,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "C1Cases",
    key.usr: "s:4cake2C1C0B5CasesO",
    key.offset: 610,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 625,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 636,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 640,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 651,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 657,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 668,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 679,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 684,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 689,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 694,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 702,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Hasher",
    key.usr: "s:s6HasherV",
    key.offset: 708,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 721,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 728,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.operator,
    key.offset: 733,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 737,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 739,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 744,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 749,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "C1Cases",
    key.usr: "s:4cake2C1C0B5CasesO",
    key.offset: 752,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 761,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 763,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 768,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 773,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "C1Cases",
    key.usr: "s:4cake2C1C0B5CasesO",
    key.offset: 776,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 788,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 796,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 802,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 807,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 812,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 822,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 827,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 838,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 843,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 852,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 863,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 868,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 878,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 889,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 893,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 904,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 910,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 921,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 932,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 937,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 942,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 947,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 955,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Hasher",
    key.usr: "s:s6HasherV",
    key.offset: 961,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 974,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 981,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.operator,
    key.offset: 986,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 990,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 992,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 997,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:4cake6MyEnumO",
    key.offset: 1002,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1010,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1012,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1017,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "MyEnum",
    key.usr: "s:4cake6MyEnumO",
    key.offset: 1022,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1033,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1041,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1050,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1059,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1064,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1073,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P",
    key.usr: "s:4cake1PP",
    key.offset: 1083,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1092,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1097,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1103,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Self",
    key.usr: "s:4cake1PP4Selfxmfp",
    key.offset: 1109,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Equatable",
    key.usr: "s:SQ",
    key.offset: 1116,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1129,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1135,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1144,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1154,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1160,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1169,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1174,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1184,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1193,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1203,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1218,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1223,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1232,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1240,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1249,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1259,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1274,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1285,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1294,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1299,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P5",
    key.usr: "s:4cake2P5P",
    key.offset: 1304,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1312,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P6",
    key.usr: "s:4cake2P6P",
    key.offset: 1322,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1332,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1336,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Self",
    key.usr: "s:4cake2P6P4Selfxmfp",
    key.offset: 1342,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.associatedtype,
    key.name: "Element",
    key.usr: "s:4cake2P5P7ElementQa",
    key.offset: 1347,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1358,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1367,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1376,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1388,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1403,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1416,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1420,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1423,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1429,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1440,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1445,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1456,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1461,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1471,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:4cake4ProtP",
    key.offset: 1481,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1493,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1498,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1510,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1520,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1522,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1529,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1537,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1543,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1552,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:4cake4ProtP",
    key.offset: 1562,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1567,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Self",
    key.usr: "s:4cake4ProtP4Selfxmfp",
    key.offset: 1573,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.associatedtype,
    key.name: "Element",
    key.usr: "s:4cake4ProtP7ElementQa",
    key.offset: 1578,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.operator,
    key.offset: 1586,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1589,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1600,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1605,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1617,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1624,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1634,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1639,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1653,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1658,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1669,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1674,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1685,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1690,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1703,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1708,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1720,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1727,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1741,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1745,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1748,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1761,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "S1",
    key.usr: "s:4cake2S1V",
    key.offset: 1771,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "SE",
    key.usr: "s:4cake2S1V2SEO",
    key.offset: 1774,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1784,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1791,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.operator,
    key.offset: 1796,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1800,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1802,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1807,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "S1",
    key.usr: "s:4cake2S1V",
    key.offset: 1812,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "SE",
    key.usr: "s:4cake2S1V2SEO",
    key.offset: 1815,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1819,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1821,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1826,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "S1",
    key.usr: "s:4cake2S1V",
    key.offset: 1831,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "SE",
    key.usr: "s:4cake2S1V2SEO",
    key.offset: 1834,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1841,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1849,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1856,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1861,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P3",
    key.usr: "s:4cake2P3P",
    key.offset: 1866,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1876,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1886,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1890,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "S2",
    key.usr: "s:4cake2S2V",
    key.offset: 1895,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1901,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1908,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1911,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1922,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P5",
    key.usr: "s:4cake2P5P",
    key.offset: 1927,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1930,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Wrapped",
    key.usr: "s:4cake2S3V7Wrappedxmfp",
    key.offset: 1936,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1946,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P5",
    key.usr: "s:4cake2P5P",
    key.offset: 1951,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1961,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1971,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Wrapped",
    key.usr: "s:4cake2S3V7Wrappedxmfp",
    key.offset: 1981,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.associatedtype,
    key.name: "Element",
    key.usr: "s:4cake2P5P7ElementQa",
    key.offset: 1989,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2000,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "S3",
    key.usr: "s:4cake2S3V",
    key.offset: 2010,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2013,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Wrapped",
    key.usr: "s:4cake2S3V7Wrappedxmfp",
    key.offset: 2019,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2029,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "P6",
    key.usr: "s:4cake2P6P",
    key.offset: 2034,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2044,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2048,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "Wrapped",
    key.usr: "s:4cake2S3V7Wrappedxmfp",
    key.offset: 2054,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.associatedtype,
    key.name: "Element",
    key.usr: "s:4cake2P5P7ElementQa",
    key.offset: 2062,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2073,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2082,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2087,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2094,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2098,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2102,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2104,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "T1",
    key.usr: "s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T1L_xmfp",
    key.offset: 2108,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2112,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2114,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "T2",
    key.usr: "s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T2L_q_mfp",
    key.offset: 2118,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2122,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "T1",
    key.usr: "s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T1L_xmfp",
    key.offset: 2128,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2133,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Prot",
    key.usr: "s:4cake4ProtP",
    key.offset: 2138,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "T2",
    key.usr: "s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T2L_q_mfp",
    key.offset: 2144,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 2149,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 2154,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.generic_type_param,
    key.name: "T1",
    key.usr: "s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T1L_xmfp",
    key.offset: 2158,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.associatedtype,
    key.name: "Element",
    key.usr: "s:4cake4ProtP7ElementQa",
    key.offset: 2161,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.operator,
    key.offset: 2169,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 2172,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2177,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2182,
    key.length: 23
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2206,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2208,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2211,
    key.length: 3
  }
]
[
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "Box",
    key.usr: "s:4cake3BoxV",
    key.generic_params: [
      {
        key.name: "Wrapped"
      }
    ],
    key.offset: 0,
    key.length: 97,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Box</decl.name>&lt;<decl.generic_type_param usr=\"s:4cake3BoxV7Wrappedxmfp\"><decl.generic_type_param.name>Wrapped</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "boxes()",
        key.usr: "s:4cake3BoxV5boxesSayACy7ElementQzGGySTRzlF",
        key.generic_requirements: [
          {
            key.description: "Wrapped : Sequence"
          }
        ],
        key.offset: 27,
        key.length: 68,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>boxes</decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:4cake3BoxV\">Box</ref.struct>&lt;<ref.generic_type_param usr=\"s:4cake3BoxV7Wrappedxmfp\">Wrapped</ref.generic_type_param>.<ref.associatedtype usr=\"s:ST7ElementQa\">Element</ref.associatedtype>&gt;]</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake3BoxV7Wrappedxmfp\">Wrapped</ref.generic_type_param> : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "C1",
    key.usr: "s:4cake2C1C",
    key.offset: 99,
    key.length: 346,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>C1</decl.name> : <ref.protocol usr=\"s:4cake4ProtP\">Prot</ref.protocol></decl.class>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "Prot",
        key.usr: "s:4cake4ProtP"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.typealias,
        key.name: "Element",
        key.usr: "s:4cake2C1C7Elementa",
        key.offset: 127,
        key.length: 23,
        key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:4cake2C1C\">C1</ref.class>.<decl.name>Element</decl.name> = <ref.struct usr=\"s:Si\">Int</ref.struct></decl.typealias>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.protocol,
            key.name: "FixedWidthInteger",
            key.usr: "s:s17FixedWidthIntegerP"
          },
          {
            key.kind: source.lang.swift.ref.protocol,
            key.name: "SignedInteger",
            key.usr: "s:SZ"
          },
          {
            key.kind: source.lang.swift.ref.protocol,
            key.name: "_ExpressibleByBuiltinIntegerLiteral",
            key.usr: "s:s35_ExpressibleByBuiltinIntegerLiteralP"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "p",
        key.usr: "s:4cake2C1C1pSivp",
        key.offset: 156,
        key.length: 10,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>p</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.var.instance,
            key.name: "p",
            key.usr: "s:4cake4ProtP1pSivp"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo()",
        key.usr: "s:4cake2C1C3fooyyF",
        key.offset: 172,
        key.length: 10,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo</decl.name>()</decl.function.method.instance>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.function.method.instance,
            key.name: "foo()",
            key.usr: "s:4cake4ProtP3fooyyF"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1(i0:i1:)",
        key.usr: "s:4cake2C1C4foo12i02i1ySin_SihtF",
        key.offset: 188,
        key.length: 33,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>i0</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>i1</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "i0",
            key.name: "i0",
            key.offset: 205,
            key.length: 3
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "i1",
            key.name: "i1",
            key.offset: 217,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.subscript,
        key.name: "subscript(_:)",
        key.usr: "s:4cake2C1CyS2icip",
        key.offset: 227,
        key.length: 38,
        key.fully_annotated_decl: "<decl.function.subscript><syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "index",
            key.offset: 246,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.subscript,
        key.name: "subscript(index:)",
        key.usr: "s:4cake2C1C5indexSiSf_tcip",
        key.offset: 271,
        key.length: 40,
        key.fully_annotated_decl: "<decl.function.subscript><syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "index",
            key.name: "i",
            key.offset: 290,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.enum,
        key.name: "C1Cases",
        key.usr: "s:4cake2C1C0B5CasesO",
        key.offset: 317,
        key.length: 46,
        key.fully_annotated_decl: "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>C1Cases</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>",
        key.inherits: [
          {
            key.kind: source.lang.swift.ref.struct,
            key.name: "Int",
            key.usr: "s:Si"
          }
        ],
        key.entities: [
          {
            key.kind: source.lang.swift.decl.enumelement,
            key.name: "case1",
            key.usr: "s:4cake2C1C0B5CasesO5case1yA2EmF",
            key.offset: 347,
            key.length: 10,
            key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>case1</decl.name></decl.enumelement>"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "extfoo()",
        key.usr: "s:4cake4ProtPAASi7ElementRtzrlE6extfooyyF::SYNTHESIZED::s:4cake2C1C",
        key.original_usr: "s:4cake4ProtPAASi7ElementRtzrlE6extfooyyF",
        key.offset: 369,
        key.length: 13,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>extfoo</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:4cake4ProtPAAE4foo1yyF::SYNTHESIZED::s:4cake2C1C",
        key.original_usr: "s:4cake4ProtPAAE4foo1yyF",
        key.offset: 388,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.subscript,
        key.name: "subscript(_:)",
        key.usr: "s:4cake4ProtPAAEyS2icip::SYNTHESIZED::s:4cake2C1C",
        key.original_usr: "s:4cake4ProtPAAEyS2icip",
        key.offset: 405,
        key.length: 38,
        key.fully_annotated_decl: "<decl.function.subscript><syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "index",
            key.offset: 424,
            key.length: 3
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.class,
    key.doc.full_as_xml: "<Other><Name></Name><Declaration>@available(macOS 10.12, iOS 10.0, watchOS 3.0, tvOS 10.0, *)\nextension C1</Declaration><CommentParts><Abstract><Para>some comments</Para></Abstract></CommentParts></Other>",
    key.offset: 447,
    key.length: 37,
    key.fully_annotated_decl: "<decl.extension.class><syntaxtype.keyword>extension</syntaxtype.keyword> <decl.name><ref.class usr=\"s:4cake2C1C\">C1</ref.class></decl.name></decl.extension.class>",
    key.extends: {
      key.kind: source.lang.swift.ref.class,
      key.name: "C1",
      key.usr: "s:4cake2C1C"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "addition()",
        key.usr: "s:4cake2C1C8additionyyF",
        key.offset: 467,
        key.length: 15,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addition</decl.name>()</decl.function.method.instance>"
      }
    ],
    key.attributes: [
      {
        key.kind: source.lang.swift.attribute.availability,
        key.platform: source.availability.platform.tvos,
        key.introduced: "10.0"
      },
      {
        key.kind: source.lang.swift.attribute.availability,
        key.platform: source.availability.platform.watchos,
        key.introduced: "3.0"
      },
      {
        key.kind: source.lang.swift.attribute.availability,
        key.platform: source.availability.platform.ios,
        key.introduced: "10.0"
      },
      {
        key.kind: source.lang.swift.attribute.availability,
        key.platform: source.availability.platform.osx,
        key.introduced: "10.12"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.class,
    key.offset: 486,
    key.length: 109,
    key.fully_annotated_decl: "<decl.extension.class><syntaxtype.keyword>extension</syntaxtype.keyword> <decl.name><ref.class usr=\"s:4cake2C1C\">C1</ref.class></decl.name> : <ref.protocol usr=\"s:4cake2P4P\">P4</ref.protocol></decl.extension.class>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "P4",
        key.usr: "s:4cake2P4P"
      }
    ],
    key.extends: {
      key.kind: source.lang.swift.ref.class,
      key.name: "C1",
      key.usr: "s:4cake2C1C"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "C1foo()",
        key.usr: "s:4cake2C1C5C1fooyyF",
        key.offset: 516,
        key.length: 12,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>C1foo</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.struct,
        key.name: "C1S1",
        key.usr: "s:4cake2C1C0B2S1V",
        key.offset: 534,
        key.length: 59,
        key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>C1S1</decl.name></decl.struct>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.function.method.instance,
            key.name: "C1S1foo(a:)",
            key.usr: "s:4cake2C1C0B2S1V0B5S1foo1ayAA2P4_p_tF",
            key.offset: 557,
            key.length: 30,
            key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>C1S1foo</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>a</decl.var.parameter.argument_label>: <decl.var.parameter.type>any <ref.protocol usr=\"s:4cake2P4P\">P4</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
            key.entities: [
              {
                key.kind: source.lang.swift.decl.var.local,
                key.keyword: "a",
                key.name: "a",
                key.offset: 575,
                key.length: 11
              }
            ]
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 597,
    key.length: 197,
    key.fully_annotated_decl: "<syntaxtype.keyword>extension</syntaxtype.keyword> <ref.class usr=\"s:4cake2C1C\">C1</ref.class>.<ref.enum usr=\"s:4cake2C1C0B5CasesO\">C1Cases</ref.enum>",
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "C1Cases",
      key.usr: "s:4cake2C1C0B5CasesO"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "hashValue",
        key.usr: "s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:4cake2C1C0B5CasesO",
        key.original_usr: "s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp",
        key.offset: 625,
        key.length: 37,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hashValue</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "hash(into:)",
        key.usr: "s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:4cake2C1C0B5CasesO",
        key.original_usr: "s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF",
        key.offset: 668,
        key.length: 47,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hash</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>into</decl.var.parameter.argument_label> <decl.var.parameter.name>hasher</decl.var.parameter.name>: <syntaxtype.keyword>inout</syntaxtype.keyword> <decl.var.parameter.type><ref.struct usr=\"s:s6HasherV\">Hasher</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "into",
            key.name: "hasher",
            key.offset: 708,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:4cake2C1C0B5CasesO",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:4cake2C1C0B5CasesO</USR><Declaration>static func != (lhs: cake.C1.C1Cases, rhs: cake.C1.C1Cases) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 721,
        key.length: 71,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4cake2C1C\">C1</ref.class>.<ref.enum usr=\"s:4cake2C1C0B5CasesO\">C1Cases</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:4cake2C1C\">C1</ref.class>.<ref.enum usr=\"s:4cake2C1C0B5CasesO\">C1Cases</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 744,
            key.length: 15
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 768,
            key.length: 15
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "C2",
    key.usr: "s:4cake2C2C",
    key.offset: 796,
    key.length: 40,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>C2</decl.name> : <ref.class usr=\"s:4cake2C1C\">C1</ref.class></decl.class>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.class,
        key.name: "C1",
        key.usr: "s:4cake2C1C"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "C2foo()",
        key.usr: "s:4cake2C2C5C2fooyyF",
        key.offset: 822,
        key.length: 12,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>C2foo</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.enum,
    key.name: "MyEnum",
    key.usr: "s:4cake6MyEnumO",
    key.offset: 838,
    key.length: 201,
    key.fully_annotated_decl: "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>MyEnum</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.struct,
        key.name: "Int",
        key.usr: "s:Si"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.enumelement,
        key.name: "Blah",
        key.usr: "s:4cake6MyEnumO4BlahyA2CmF",
        key.offset: 863,
        key.length: 9,
        key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>Blah</decl.name></decl.enumelement>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "hashValue",
        key.usr: "s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:4cake6MyEnumO",
        key.original_usr: "s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp",
        key.offset: 878,
        key.length: 37,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hashValue</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "hash(into:)",
        key.usr: "s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:4cake6MyEnumO",
        key.original_usr: "s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF",
        key.offset: 921,
        key.length: 47,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hash</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>into</decl.var.parameter.argument_label> <decl.var.parameter.name>hasher</decl.var.parameter.name>: <syntaxtype.keyword>inout</syntaxtype.keyword> <decl.var.parameter.type><ref.struct usr=\"s:s6HasherV\">Hasher</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "into",
            key.name: "hasher",
            key.offset: 961,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:4cake6MyEnumO",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:4cake6MyEnumO</USR><Declaration>static func != (lhs: cake.MyEnum, rhs: cake.MyEnum) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 974,
        key.length: 63,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4cake6MyEnumO\">MyEnum</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:4cake6MyEnumO\">MyEnum</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 997,
            key.length: 11
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 1017,
            key.length: 11
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "P",
    key.usr: "s:4cake1PP",
    key.offset: 1041,
    key.length: 30,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>P</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo()",
        key.usr: "s:4cake1PP3fooyyF",
        key.offset: 1059,
        key.length: 10,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.protocol,
    key.offset: 1073,
    key.length: 54,
    key.fully_annotated_decl: "<decl.extension.protocol><syntaxtype.keyword>extension</syntaxtype.keyword> <decl.name><ref.protocol usr=\"s:4cake1PP\">P</ref.protocol></decl.name></decl.extension.protocol>",
    key.extends: {
      key.kind: source.lang.swift.ref.protocol,
      key.name: "P",
      key.usr: "s:4cake1PP"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "bar()",
        key.usr: "s:4cake1PPAAE3baryySQRzrlF",
        key.generic_requirements: [
          {
            key.description: "Self : Equatable"
          }
        ],
        key.offset: 1092,
        key.length: 33,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>bar</decl.name>() <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake1PP4Selfxmfp\">Self</ref.generic_type_param> : <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "P2",
    key.usr: "c:@M@cake@objc(pl)P2",
    key.offset: 1129,
    key.length: 53,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>P2</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "c:@M@cake@objc(pl)P2(im)foo1",
        key.offset: 1154,
        key.length: 26,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>",
        key.is_optional: 1
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "P3",
    key.usr: "s:4cake2P3P",
    key.offset: 1184,
    key.length: 37,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>P3</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.associatedtype,
        key.name: "T",
        key.usr: "s:4cake2P3P1TQa",
        key.offset: 1203,
        key.length: 16,
        key.fully_annotated_decl: "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>T</decl.name></decl.associatedtype>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "P4",
    key.usr: "s:4cake2P4P",
    key.offset: 1223,
    key.length: 15,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>P4</decl.name></decl.protocol>"
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "P5",
    key.usr: "s:4cake2P5P",
    key.offset: 1240,
    key.length: 43,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>P5</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.associatedtype,
        key.name: "Element",
        key.usr: "s:4cake2P5P7ElementQa",
        key.offset: 1259,
        key.length: 22,
        key.fully_annotated_decl: "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Element</decl.name></decl.associatedtype>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "P6",
    key.usr: "s:4cake2P6P",
    key.offset: 1285,
    key.length: 25,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>P6</decl.name> : <ref.protocol usr=\"s:4cake2P5P\">P5</ref.protocol></decl.protocol>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "P5",
        key.usr: "s:4cake2P5P"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.protocol,
    key.offset: 1312,
    key.length: 53,
    key.fully_annotated_decl: "<decl.extension.protocol><syntaxtype.keyword>extension</syntaxtype.keyword> <decl.name><ref.protocol usr=\"s:4cake2P6P\">P6</ref.protocol></decl.name></decl.extension.protocol>",
    key.extends: {
      key.kind: source.lang.swift.ref.protocol,
      key.name: "P6",
      key.usr: "s:4cake2P6P"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "null",
        key.usr: "s:4cake2P6PAAE4null7ElementQzSgvp",
        key.offset: 1332,
        key.length: 31,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>null</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:4cake2P6P4Selfxmfp\">Self</ref.generic_type_param>.<ref.associatedtype usr=\"s:4cake2P5P7ElementQa\">Element</ref.associatedtype>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "Prot",
    key.usr: "s:4cake4ProtP",
    key.offset: 1367,
    key.length: 102,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Prot</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.associatedtype,
        key.name: "Element",
        key.usr: "s:4cake4ProtP7ElementQa",
        key.offset: 1388,
        key.length: 22,
        key.fully_annotated_decl: "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Element</decl.name></decl.associatedtype>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "p",
        key.usr: "s:4cake4ProtP1pSivp",
        key.offset: 1416,
        key.length: 18,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>p</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo()",
        key.usr: "s:4cake4ProtP3fooyyF",
        key.offset: 1440,
        key.length: 10,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:4cake4ProtP4foo1yyF",
        key.offset: 1456,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.protocol,
    key.offset: 1471,
    key.length: 79,
    key.fully_annotated_decl: "<decl.extension.protocol><syntaxtype.keyword>extension</syntaxtype.keyword> <decl.name><ref.protocol usr=\"s:4cake4ProtP\">Prot</ref.protocol></decl.name></decl.extension.protocol>",
    key.extends: {
      key.kind: source.lang.swift.ref.protocol,
      key.name: "Prot",
      key.usr: "s:4cake4ProtP"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:4cake4ProtPAAE4foo1yyF",
        key.default_implementation_of: "s:4cake4ProtP4foo1yyF",
        key.offset: 1493,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.subscript,
        key.name: "subscript(_:)",
        key.usr: "s:4cake4ProtPAAEyS2icip",
        key.offset: 1510,
        key.length: 38,
        key.fully_annotated_decl: "<decl.function.subscript><syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "index",
            key.offset: 1529,
            key.length: 3
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.protocol,
    key.generic_requirements: [
      {
        key.description: "Self.Element == Int"
      }
    ],
    key.offset: 1552,
    key.length: 63,
    key.fully_annotated_decl: "<decl.extension.protocol><syntaxtype.keyword>extension</syntaxtype.keyword> <decl.name><ref.protocol usr=\"s:4cake4ProtP\">Prot</ref.protocol></decl.name> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake4ProtP4Selfxmfp\">Self</ref.generic_type_param>.<ref.associatedtype usr=\"s:4cake4ProtP7ElementQa\">Element</ref.associatedtype> == <ref.struct usr=\"s:Si\">Int</ref.struct></decl.generic_type_requirement></decl.extension.protocol>",
    key.extends: {
      key.kind: source.lang.swift.ref.protocol,
      key.name: "Prot",
      key.usr: "s:4cake4ProtP"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "extfoo()",
        key.usr: "s:4cake4ProtPAASi7ElementRtzrlE6extfooyyF",
        key.offset: 1600,
        key.length: 13,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>extfoo</decl.name>()</decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "S1",
    key.usr: "s:4cake2S1V",
    key.offset: 1617,
    key.length: 142,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>S1</decl.name></decl.struct>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.enum,
        key.name: "SE",
        key.usr: "s:4cake2S1V2SEO",
        key.offset: 1634,
        key.length: 63,
        key.fully_annotated_decl: "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:4cake2S1V\">S1</ref.struct>.<decl.name>SE</decl.name></decl.enum>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.enumelement,
            key.name: "a",
            key.usr: "s:4cake2S1V2SEO1ayA2EmF",
            key.offset: 1653,
            key.length: 6,
            key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>a</decl.name></decl.enumelement>"
          },
          {
            key.kind: source.lang.swift.decl.enumelement,
            key.name: "b",
            key.usr: "s:4cake2S1V2SEO1byA2EmF",
            key.offset: 1669,
            key.length: 6,
            key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>b</decl.name></decl.enumelement>"
          },
          {
            key.kind: source.lang.swift.decl.enumelement,
            key.name: "c",
            key.usr: "s:4cake2S1V2SEO1cyA2EmF",
            key.offset: 1685,
            key.length: 6,
            key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>c</decl.name></decl.enumelement>"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "foo1()",
        key.usr: "s:4cake2S1V4foo1yyF",
        key.offset: 1703,
        key.length: 11,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>foo1</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.struct,
        key.name: "S2",
        key.usr: "s:4cake2S1V2S2V",
        key.offset: 1720,
        key.length: 37,
        key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>S2</decl.name></decl.struct>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.instance,
            key.name: "b",
            key.usr: "s:4cake2S1V2S2V1bSivp",
            key.offset: 1741,
            key.length: 10,
            key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>b</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.enum,
    key.offset: 1761,
    key.length: 86,
    key.fully_annotated_decl: "<syntaxtype.keyword>extension</syntaxtype.keyword> <ref.struct usr=\"s:4cake2S1V\">S1</ref.struct>.<ref.enum usr=\"s:4cake2S1V2SEO\">SE</ref.enum>",
    key.extends: {
      key.kind: source.lang.swift.ref.enum,
      key.name: "SE",
      key.usr: "s:4cake2S1V2SEO"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:4cake2S1V2SEO",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:4cake2S1V2SEO</USR><Declaration>static func != (lhs: cake.S1.SE, rhs: cake.S1.SE) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 1784,
        key.length: 61,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4cake2S1V\">S1</ref.struct>.<ref.enum usr=\"s:4cake2S1V2SEO\">SE</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:4cake2S1V\">S1</ref.struct>.<ref.enum usr=\"s:4cake2S1V2SEO\">SE</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 1807,
            key.length: 10
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 1826,
            key.length: 10
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "S2",
    key.usr: "s:4cake2S2V",
    key.offset: 1849,
    key.length: 50,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>S2</decl.name> : <ref.protocol usr=\"s:4cake2P3P\">P3</ref.protocol></decl.struct>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "P3",
        key.usr: "s:4cake2P3P"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.typealias,
        key.name: "T",
        key.usr: "s:4cake2S2V1Ta",
        key.offset: 1876,
        key.length: 21,
        key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4cake2S2V\">S2</ref.struct>.<decl.name>T</decl.name> = <ref.struct usr=\"s:4cake2S2V\">S2</ref.struct></decl.typealias>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.protocol,
            key.name: "P3",
            key.usr: "s:4cake2P3P"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "S3",
    key.usr: "s:4cake2S3V",
    key.generic_params: [
      {
        key.name: "Wrapped"
      }
    ],
    key.generic_requirements: [
      {
        key.description: "Wrapped : P5"
      }
    ],
    key.offset: 1901,
    key.length: 97,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>S3</decl.name>&lt;<decl.generic_type_param usr=\"s:4cake2S3V7Wrappedxmfp\"><decl.generic_type_param.name>Wrapped</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:4cake2P5P\">P5</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake2S3V7Wrappedxmfp\">Wrapped</ref.generic_type_param> : <ref.protocol usr=\"s:4cake2P5P\">P5</ref.protocol></decl.generic_type_requirement></decl.struct>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "P5",
        key.usr: "s:4cake2P5P"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.typealias,
        key.name: "Element",
        key.usr: "s:4cake2S3V7Elementa",
        key.offset: 1961,
        key.length: 35,
        key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:4cake2S3V\">S3</ref.struct>&lt;<ref.generic_type_param usr=\"s:4cake2S3V7Wrappedxmfp\">Wrapped</ref.generic_type_param>&gt;.<decl.name>Element</decl.name> = <ref.generic_type_param usr=\"s:4cake2S3V7Wrappedxmfp\">Wrapped</ref.generic_type_param>.<ref.associatedtype usr=\"s:4cake2P5P7ElementQa\">Element</ref.associatedtype></decl.typealias>",
        key.conforms: [
          {
            key.kind: source.lang.swift.ref.associatedtype,
            key.name: "Element",
            key.usr: "s:4cake2P5P7ElementQa"
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.struct,
    key.generic_params: [
      {
        key.name: "Wrapped"
      }
    ],
    key.generic_requirements: [
      {
        key.description: "Wrapped : P6"
      }
    ],
    key.offset: 2000,
    key.length: 80,
    key.fully_annotated_decl: "<syntaxtype.keyword>extension</syntaxtype.keyword> <ref.struct usr=\"s:4cake2S3V\">S3</ref.struct> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake2S3V7Wrappedxmfp\">Wrapped</ref.generic_type_param> : <ref.protocol usr=\"s:4cake2P6P\">P6</ref.protocol></decl.generic_type_requirement>",
    key.extends: {
      key.kind: source.lang.swift.ref.struct,
      key.name: "S3",
      key.usr: "s:4cake2S3V"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "null",
        key.usr: "s:4cake2P6PAAE4null7ElementQzSgvp::SYNTHESIZED::s:4cake2S3V",
        key.original_usr: "s:4cake2P6PAAE4null7ElementQzSgvp",
        key.offset: 2044,
        key.length: 34,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>null</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:4cake2S3V7Wrappedxmfp\">Wrapped</ref.generic_type_param>.<ref.associatedtype usr=\"s:4cake2P5P7ElementQa\">Element</ref.associatedtype>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "genfoo(x:y:)",
    key.usr: "s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF",
    key.generic_params: [
      {
        key.name: "T1"
      },
      {
        key.name: "T2"
      }
    ],
    key.generic_requirements: [
      {
        key.description: "T1 : Prot"
      },
      {
        key.description: "T2 : C1"
      },
      {
        key.description: "T1.Element == Int"
      }
    ],
    key.offset: 2082,
    key.length: 93,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>genfoo</decl.name>&lt;<decl.generic_type_param usr=\"s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T1L_xmfp\"><decl.generic_type_param.name>T1</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T2L_q_mfp\"><decl.generic_type_param.name>T2</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label> <decl.var.parameter.name>ix</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T1L_xmfp\">T1</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label> <decl.var.parameter.name>iy</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T2L_q_mfp\">T2</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T1L_xmfp\">T1</ref.generic_type_param> : <ref.protocol usr=\"s:4cake4ProtP\">Prot</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T2L_q_mfp\">T2</ref.generic_type_param> : <ref.class usr=\"s:4cake2C1C\">C1</ref.class></decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:4cake6genfoo1x1yyx_q_tAA4ProtRzAA2C1CRb_Si7ElementRtzr0_lF2T1L_xmfp\">T1</ref.generic_type_param>.<ref.associatedtype usr=\"s:4cake4ProtP7ElementQa\">Element</ref.associatedtype> == <ref.struct usr=\"s:Si\">Int</ref.struct></decl.generic_type_requirement></decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "x",
        key.name: "ix",
        key.offset: 2108,
        key.length: 2
      },
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "y",
        key.name: "iy",
        key.offset: 2118,
        key.length: 2
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "shouldPrintAnyAsKeyword(x:)",
    key.usr: "s:4cake23shouldPrintAnyAsKeyword1xyyp_tF",
    key.offset: 2177,
    key.length: 38,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>shouldPrintAnyAsKeyword</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any</syntaxtype.keyword></decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "x",
        key.name: "x",
        key.offset: 2211,
        key.length: 3
      }
    ]
  }
]
